e
Math.e
exp(1)
1 - exp(-3/20) + exp(-3)
(24 - 30)/sqrt(3.693)
pnorm((24 - 30)/sqrt(3.693))
pnorm((24 - 20)/sqrt(4.264))
1 - pnorm(abs((24 - 30)/sqrt(3.693)))
source('~/.active-rstudio-document', echo=TRUE)
PH0(1)
set = c((0,0), (0,1))
set = c(c(0,0), c(0,1))
set
?combn
combn(c(0,1,2), 2)
unlist(lapply(x, function(n) combn(c(0,1,2), n, simplify=FALSE)), recursive=FALSE)
unlist(lapply(c(0,1,2), function(n) combn(c(0,1,2), n, simplify=FALSE)), recursive=FALSE)
vector()
hm -< vector()
hm <- vector()
hm[0] = 3
hm
hm[1] = 4
hm
source('~/.active-rstudio-document', echo=TRUE)
comb
length(comb)
comb[1:8]
comb[9:9]
comb[10:9]
comb[10:10]
combn(comb,1)
combn(comb,2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
combn(comb,2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb,2, PH00)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
0 %in% c(0,1,2)
0.2 %in% c(0,1.2,2)
1.2 %in% c(0,1.2,2)
0.07 %in combn(comb, 1, PH00)
0.07 %in% combn(comb, 1, PH00)
combn(comb, 1, PH00)
match(0.01, combn(comb, 1, PH00))
combn(comb, 1, PH00)[1]
combn(comb, 1, PH00)[1] == 0.01
combn(comb, 1, PH00)[1] > 0.09
combn(comb, 1, PH00)[1] == '0.01'
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb, 3, PH00)
comb
combn(comb, 3)
combn(comb, 3, sum)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
combn(comb, 3, sum)
combn(comb, 3)[1]
combn(comb, 3)[1,]
combn(comb, 3)[,1]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cols(v)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
comb
Xj = c(1382, 1403, 1430)
Xb = c(1328, 1388, 1410, 1528)
mean(Xj)
mean(Xb)
sd(Xj)
sd(Xb)
((2*sd(Xj))+(3*sd(Xb)))/5
((2*sd(Xj)^2)+(3*sd(Xb)^2))/5
((2*sd(Xj)^2)+(3*(sd(Xb)^2)))/5
sqrt(4448.2)
sqrt(4448.2)*sqe
sqrt(4448.2)*sqrt(7/12)
tnorm
?pt
pnorm(0.5)
pt(0.5, 5)
pt(0.5, 200)
qnorm(0.975)
pnorm(0.975)
qt(0.975)
qt(0.975, 5)
qt(0.975, 200)
qt(0.95, 5)
1405-1413.5
8.5/50.939
pnorm(0.5)
pnorm(1)
pnorm(0.167)
pnorm(-0.167)
2*pt(-0.167)
2*pt(-0.167, 5)
X = c(32,17,14,12,8,12,5,6,3,4,5,2)
Y = c(31,15,11,11,6,19,7,6,5,3,4,2)
plot(X,Y)
fit <- lm(Y~X)
abline(fit)
summary(fit)
coef(fit)
10-0.942*10
sd(X)
sd(Y)
sd(X)/sd(Y)
sd(Y)/sd(X)
cov(X,Y)/sd(X)
cov(X,Y)/sd(X)^2
0.942^2
sd(X)^2
sd(X)^2 * 0.942^2
sum((Y=mean(Y))^2)
sd(Y)
Y
Y = c(31,15,11,11,6,19,7,6,5,3,4,2)
sum((Y-mean(Y))^2)
sd(Y)^2
(Y-mean(Y))^2
sum(Y^2) + length(Y)*mean(Y)^2
sum(Y^2) - length(Y)*(mean(Y)^2)
sum(X^2) - length(X) * (mean(X)^2)
(0.887*776)/764
sum((Y-mean(Y))^2)
length(Y)
sum((X-mean(X))^2)
76.4/776
sqrt(76.4/776)
qnorm(0.975)
qt(0.975, 10)
qt(0.95, 10)
qt(0.975, 10)
0.942/0.314
pt(3, 10)
2 - 2*pt(3, 10)
ploit(X, Y, xlab="Poll", ylab="Reality")
plot(X, Y, xlab="Poll", ylab="Reality")
abline(fit)
library(limma)
install.packages(limma)
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
stat <- rnorm(100)
sel <- 1:10
sel2 <- 11:20
stat[sel] <- stat[sel]+1
stat[sel2] <- stat[sel2]-1
# One directional
barcodeplot(stat, index = sel)
library(limma)
stat <- rnorm(100)
sel <- 1:10
sel2 <- 11:20
stat[sel] <- stat[sel]+1
stat[sel2] <- stat[sel2]-1
# One directional
barcodeplot(stat, index = sel)
barcodeplot(stat, index = sel, col.bar=c("yellow", "orange")))
barcodeplot(stat, index = sel, col.bar=c("yellow", "orange"))
barcodeplot(stat, index = sel, col.bar=c("yellow", "orange"), worm=F)
barcodeplot(stat, index = sel, col.bar=c("yellow", "orange"), quantiles=c(0,0))
barcodeplot(stat, index = sel, quantiles=c(-2,2))
barcodeplot(stat, index = sel, quantiles=c(-0.1,6))
barcodeplot(stat, index = sel, quantiles=c(-6,6))
barcodeplot(stat, index = sel, quantiles=c(-6,1))
stat
all_genes <- read.tabe("D:\\Projects\\drug_target_workshop\\results\\b2h_aggregated_results.txt", sep="\t", header=FALSE)
all_genes <- read.table("D:\\Projects\\drug_target_workshop\\results\\b2h_aggregated_results.txt", sep="\t", header=FALSE)
head(all_genes)
sorted_genes = all_genes[[1]]
head(sorted_genes)
causal_genes <- read.table("D:\\Projects\\drug_target_workshop\\data\\AML_census_genes.txt", sep="\t", header=FALSE)
sorted_genes = as.character(all_genes[[1]])
head(sorted_genes)
causal_genes <- as.character(causal_genes)
head(causal_genes)
causal_genes <- read.table("D:\\Projects\\drug_target_workshop\\data\\AML_census_genes.txt", sep="\t", header=FALSE)
head(causal_genes)
causal_genes <- as.character(causal_genes[[1]])
head(causal_genes)
all <= 1:length(sorted_genes)
all <- 1:length(sorted_genes)
causal_indices <- []
for (i in 1:length(sorted_genes)) {
if (sorted_genes[i] %in% causal_genes) {
causal_indices <- c(causal_indices, i)
}
}
causal_indices <- []
for (i in 1:length(sorted_genes)) {
if (sorted_genes[i] %in% causal_genes) {
causal_indices <- c(causal_indices, i)
}
}
causal_indices <- []
causal_indices <- c()
for (i in 1:length(sorted_genes)) {
if (sorted_genes[i] %in% causal_genes) {
causal_indices <- c(causal_indices, i)
}
}
causal_indices
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000))
labels = c("Best", ""))
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000)
labels = c("Best", ""))
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("Best", ""))
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"))
?plot
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), xaxt='n')
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), xaxt='n', ann=FALSE)
png(filename="D:\\Projects\\drug_target_workshop\\results\\causal_genes_enrich.png")
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"))
dev.off()
png(filename="D:\\Projects\\drug_target_workshop\\results\\causal_genes_enrich.png",res=1200)
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"))
dev.off()
png(filename="D:\\Projects\\drug_target_workshop\\results\\causal_genes_enrich.png",width=1800,height=950,res=600)
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"))
dev.off()
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"))
png(filename="D:\\Projects\\drug_target_workshop\\results\\causal_genes_enrich.png",units="in", width=11, height=8.5, res=300)
barcodeplot(all, index = causal_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"))
dev.off()
drug_targets <- read.table("D:\\Projects\\drug_target_workshop\\data\\AML_drug_targets.txt", sep="\t", header=FALSE)
drug_targets <- as.character(drug_targets[[1]])
dd_indices <- c()
for (i in 1:length(sorted_genes)) {
if (sorted_genes[i] %in% drug_targets) {
dd_indices <- c(dd_indices, i)
}
}
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"))
png(filename="D:\\Projects\\drug_target_workshop\\results\\enrich.png",units="in", width=11, height=8.5, res=300)
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"))
dev.off()
?barcodeplot
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=("black", "burlywood"))
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("black", "burlywood"))
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "burlywood"))
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "chocolate3"))
png(filename="D:\\Projects\\drug_target_workshop\\results\\enrich.png",units="in", width=11, height=8.5, res=300)
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "chocolate3"))
dev.off()
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "firebrick4"))
png(filename="D:\\Projects\\drug_target_workshop\\results\\enrich.png",units="in", width=11, height=7, res=300)
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "firebrick4"))
dev.off()
png(filename="D:\\Projects\\drug_target_workshop\\results\\enrich.png",units="in", width=9, height=5, res=300)
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "firebrick4"))
dev.off()
png(filename="D:\\Projects\\drug_target_workshop\\results\\enrich.png",units="in", width=9.5, height=5.5, res=300)
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "firebrick4"))
dev.off()
png(filename="D:\\Projects\\drug_target_workshop\\results\\enrich.png",units="in", width=10, height=5.5, res=300)
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "firebrick4"))
dev.off()
png(filename="D:\\Projects\\drug_target_workshop\\results\\enrich.png",units="in", width=9.5, height=6, res=300)
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "firebrick4"))
dev.off()
source('D:/Projects/drug_target_workshop/enrichment_analysis.R', echo=TRUE)
source('D:/Projects/drug_target_workshop/enrichment_analysis.R', echo=TRUE)
source('D:/Projects/drug_target_workshop/enrichment_analysis.R', echo=TRUE)
?barcodeplot
library('limma')
?barcodeplot
source('D:/Projects/drug_target_workshop/enrichment_analysis.R', echo=TRUE)
png(filename="D:\\Projects\\drug_target_workshop\\results\\enrich_meta.png",units="in", width=9.5, height=6, res=300)
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "firebrick4"))
dev.off()
source('D:/Projects/drug_target_workshop/enrichment_analysis.R', echo=TRUE)
all_genes <- read.table("D:\\Projects\\drug_target_workshop\\results\\b2h_aggregated_results.txt", sep="\t", header=FALSE)
sorted_genes = as.character(all_genes[[1]])
causal_genes <- read.table("D:\\Projects\\drug_target_workshop\\data\\AML_cosmic_genes.txt", sep="\t", header=FALSE)
causal_genes <- as.character(causal_genes[[1]])
all <- 1:length(sorted_genes)
causal_indices <- c()
for (i in 1:length(sorted_genes)) {
if (sorted_genes[i] %in% causal_genes) {
causal_indices <- c(causal_indices, i)
}
}
drug_targets <- read.table("D:\\Projects\\drug_target_workshop\\data\\AML_drug_targets.txt", sep="\t", header=FALSE)
drug_targets <- as.character(drug_targets[[1]])
dd_indices <- c()
for (i in 1:length(sorted_genes)) {
if (sorted_genes[i] %in% drug_targets) {
dd_indices <- c(dd_indices, i)
}
}
# One directional
png(filename="D:\\Projects\\drug_target_workshop\\results\\enrich_true.png",units="in", width=9.5, height=6, res=300)
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "firebrick4"))
dev.off()
barcodeplot(all, index = causal_indices, index2 = dd_indices, quantiles=c(length(sorted_genes) / 10, 10000000),
labels = c("", "Best"), col.bars=c("burlywood4", "firebrick4"))
legend()
legend(100, 0)
legend(100, 100, c("A", "B"), col=c("burlywood4", "firebrick4"))
legend(0, 0, c("A", "B"), col=c("burlywood4", "firebrick4"))
legend(0, 0, c("A", "B"), col=c("burlywood4", "firebrick4"), lty=c(1,1))
legend(0, 0, c("COSMIC causal genes", "DrugBank drug targets"), col=c("burlywood4", "firebrick4"), lty=c(1,1))
legend(0, 100, c("COSMIC causal genes", "DrugBank drug targets"), col=c("burlywood4", "firebrick4"), lty=c(1,1))
legend(0, 10, c("COSMIC causal genes", "DrugBank drug targets"), col=c("burlywood4", "firebrick4"), lty=c(1,1))
legend(0, 1, c("COSMIC causal genes", "DrugBank drug targets"), col=c("burlywood4", "firebrick4"), lty=c(1,1))
legend(0, 4, c("COSMIC causal genes", "DrugBank drug targets"), col=c("burlywood4", "firebrick4"), lty=c(1,1))
WORKING_DIR <- "D:\\Projects\\drug_target_workshop\\output_validations_FLT_second_try\\per_knockout"
setwd(WORKING_DIR)
hmm <- read.table('PIM.txt')
head(hmm)
?ceiling
WORKING_DIR <- "D:/Projects/drug_target_workshop/b2h_dists"
setwd(WORKING_DIR)
# FLT patients
pim <- as.numeric(read.table('FLT3/PIM.txt')[,1])
pi3k <- as.numeric(read.table('FLT3/PI3K.txt')[,1])
mek <- as.numeric(read.table('FLT3/MEK.txt')[,1])
# remove outliers
N <- ceiling(length(pim) * 0.95)
df <- data.frame(PIM=pim, MEK=mek, PI3K=pi3k)
boxplot(df, main="B2H distribution per known drug target",
xlab="Drug Targets", ylab="B2H score",
boxwex=0.6)
pim <- sort(pim)[1:N]
pi3k <- sort(pi3k)[1:N]
mek <- sort(mek)[1:N]
boxplot(df, main="B2H distribution per known drug target",
xlab="Drug Targets", ylab="B2H score",
boxwex=0.6)
df <- data.frame(PIM=pim, MEK=mek, PI3K=pi3k)
boxplot(df, main="B2H distribution per known drug target",
xlab="Drug Targets", ylab="B2H score",
boxwex=0.6)
png(filename="FLT-boxplot.png", units="in", width=8, height=8, res=300)
boxplot(df, main="B2H distribution per known drug target",
xlab="Drug Targets", ylab="B2H score",
boxwex=0.6)
dev.off()
pim <- as.numeric(read.table('nonFLT3/PIM.txt')[,1])
pi3k <- as.numeric(read.table('nonFLT3/PI3K.txt')[,1])
mek <- as.numeric(read.table('nonFLT3/MEK.txt')[,1])
# remove outliers
N <- ceiling(length(pim) * 0.95)
pim <- sort(pim)[1:N]
pi3k <- sort(pi3k)[1:N]
mek <- sort(mek)[1:N]
df <- data.frame(PIM=pim, MEK=mek, PI3K=pi3k)
boxplot(df, main="B2H distribution per known drug target",
xlab="Drug Targets", ylab="B2H score",
boxwex=0.6)
png(filename="nonFLT-boxplot.png", units="in", width=8, height=8, res=300)
boxplot(df, main="B2H distribution per known drug target",
xlab="Drug Targets", ylab="B2H score",
boxwex=0.6)
dev.off()
